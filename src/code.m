clear all;close all;clc
%初始化邻接压缩表，算法导论405页的图

b = [
2,1 ,1300;
7,2 ,1670;
7,3 ,1830;
6,4 , 650;
6,5 , 260;
9,6 ,1040;
13,7 ,1990;
9,8 , 820;
15,9 ,1890;
14,10, 1900;
16,11, 1700;
19,12, 2750;
18,13, 1270;
17,14, 1260;
20,15, 1210;
21,15, 1750;
25,16, 2200;
21,17, 2260;
24,17, 1450;
29,18, 2580;
25,19, 1850;
28,20, 1310;
24,22, 1670;
27,23 ,980;
32,25, 1540;
27,26, 1790;
31,27, 1230;
30,28, 1510;
39,29, 2320;
34,30, 1130;
44,31, 2060;
38,32, 2520;
36,33, 1040;
43,34, 1260;
42,35, 1120;
48,36, 1330;
46,37, 1140;
44,38, 2060;
54,38, 2170;
43,39, 1430;
50,40, 1400;
45,41, 2190;
46,42, 1240;
47,42, 1230;
51,43, 1340;
84,45, 8310;
49,46, 1070;
52,46, 1360;
50,48, 1420;
53,49 ,830;
59,50, 1370;
55,51, 1020;
60,52, 1430;
63,53, 1740;
58,54, 1070;
61,55, 1660;
59,56, 1140;
60,57, 1250;
62,57 ,860;
68,58, 2820;
64,59, 1310;
66,60, 1220;
65,61, 1420;
67,61, 1150;
64,62 ,680;
67,63, 1730;
69,66, 1430;
74,67, 1800;
71,68, 1440;
73,69, 1830;
78,69, 1470;
71,70, 1560;
77,70, 2040;
72,71, 1400;
79,72, 2380;
75,74, 1080;
77,74, 1390;
76,75 ,630;
82,76, 1440;
81,77, 1260;
88,78, 1450;
86,79, 1940;
95,79, 2950;
89,80, 1300;
93,80, 1810;
85,81, 1900;
83,82, 1140;
87,82 ,600;
92,84, 2410;
97,85, 1890;
101,86, 2810;
96,87, 1560;
89,88, 1820;
103,90, 4320;
93,91 ,970;
101,92, 3210;
110,92, 3250;
100,93, 1610;
96,94, 1730;
98,95 ,530;
99,96, 1230;
105,99, 1400;
104,102,1030;
105,102,1120;
118,103,4090;
106,104,1260;
115,104,1470;
113,105,1610;
116,106,1820;
117,107,1690;
113,108,1550;
114,108,1560;
110,109,2040;
121,109,3110;
114,111,1620;
116,112,1050;
117,112, 790;
124,114,3110;
119,117, 760;
132,118,6570;
123,119,1780;
123,120,2060;
125,121,4900;
128,122,1760;
126,123,1060;
127,124,3340;
136,125,4490;
131,126,2390;
129,128,1340;
131,128,2800;
133,129,1740;
134,130,2090;
134,131,2640;
136,132,4080;
135,133,1900;
137,134,3720;
139,134,4170;
138,137,1760;];

% % for i=1:138
% % b(i:3) = fix(10000./b(i:3));
% % end

m=max(max(b(:,1:2)));       %压缩表中最大值就是邻接矩阵的宽与高
A=compresstable2matrix(b);  %从邻接压缩表构造图的矩阵表示
netplot(A,1);

maxflow=zeros(m,m);
while 1              %下面用广度优先搜索找增广路径
	flag=[];            %相当于closed表，已访问过的节点
	flag=[flag 1];
	head=1;
	tail=1;
	queue=[];           %队列，相当于open表，将要访问的节点
	queue(head)=1;
	head=head+1;

	pa=zeros(1,m);      %每个节点的前趋
	pa(1)=1;            %源节点前趋是自己
	while tail~=head    %广度优先搜索，具体细节就不注释了
		i=queue(tail);
		for j=1:m
			if A(i,j)>0 && isempty(find(flag==j,1))
				queue(head)=j;
				head=head+1;
				flag=[flag j];
				pa(j)=i;
			end
		end
		tail=tail+1;
	end

	if pa(m)==0     %如果搜索不到汇节点，退出循环
		break;
	end

	path=[];
	i=m;                %从汇节点开始
	k=0;                %路径包含的边的个数
	while i~=1          %使用前趋构造从源节点到汇节点的路径
		path=[path;pa(i) i A(pa(i),i)];     %存入路径
		i=pa(i);            %使用前趋表反向搜寻，借鉴Dijsktra中的松弛方法
		k=k+1;
	end
	Mi=min(path(:,3));        %寻找增广路径中最小的那条边
	for i=1:k
		A(path(i,1),path(i,2))=A(path(i,1),path(i,2))-Mi;     %增广路径中每条路径减去最小的边
		maxflow(path(i,1),path(i,2))=maxflow(path(i,1),path(i,2))+Mi;   %最大流，原网络包含这个网络，我只能这样表示了
	end                     %使用新的图A进入下一循环，从新开始找增广路径
end

figure;
netplot(maxflow,1)


